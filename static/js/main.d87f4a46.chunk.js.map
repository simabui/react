{"version":3,"sources":["transitions/errorSlide.module.css","transitions/pop.module.css","transitions/slide.module.css","redux/phonebook/phonebookActions.js","redux/phonebook/phonebookOperations.js","redux/phonebook/phoneSelectors.js","components/Notification/Notification.js","components/ContactForm/ErrorDuplicate.js","components/common/Input.js","components/ContactForm/ContactForm.js","components/ContactForm/ContactFormContainer.js","components/Contact/Contact.js","components/Contact/ContactContainer.js","components/ContactList/ContactList.js","components/ContactList/ContactListContainer.js","components/Filter/Filter.js","components/Filter/FilterContainer.js","components/App.js","redux/combineReducers.js","redux/phonebook/phonebookReducers.js","redux/configureStore.js","index.js"],"names":["module","exports","enter","enterActive","exit","exitActive","TYPE","getStart","getSuccess","getFail","updateStart","updateSuccess","updateFail","filter","deleteStart","deleteSuccess","deleteFail","axios","defaults","baseURL","deleteData","id","dispatch","type","delete","concat","then","payload","actions","catch","err","error","getContacts","state","phonebook","collection","getFilterValue","getFilteredContacts","createSelector","contacts","filterValue","_ref","name","includes","Notification","label","react_default","a","createElement","style","color","display","defaultProps","css","_templateObject","p","_templateObject2","ErrorDuplicate","Object","core_browser_esm","Input_templateObject","input","Input_templateObject2","Input","text","value","onChange","htmlFor","form","ContactForm_templateObject","button","ContactForm_templateObject2","rules","number","messages","name.required","number.required","ContactForm","errors","isDuplicate","handleSubmit","e","preventDefault","_this$state","_this","putContact","props","handleDupName","setState","setTimeout","exitAnimation","data","validateAll","d","objectSpread","reset","formattedErr","forEach","field","message","handleInput","_e$target","target","defineProperty","some","contact","this","_this$state2","idName","uuidv4","idPhone","onSubmit","common_Input","components_Notification_Notification","CSSTransition","in","timeout","classNames","SlideTransition","unmountOnExit","ContactForm_ErrorDuplicate","Component","connect","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","request","wrap","_context2","prev","next","post","sent","user","t0","stop","_x2","apply","arguments","item","Contact_templateObject","itemName","Contact_templateObject2","itemNumber","_templateObject3","_templateObject4","list","_templateObject5","Contact","deleContact","del","useCallback","onClick","lists","ContactList_templateObject","ContactList","fetchContacts","useEffect","TransitionGroup","component","map","key","slideTransition","ContactContainer","_callee","_context","get","users","_x","Filter","inputFilter","length","PopTransition","App","_useState","useState","_useState2","slicedToArray","isShown","setShown","Fragment","ContactFormContainer","FilterContainer","ContactListContainer","collectionReducers","combineReducers","undefined","action","toConsumableArray","rootReducer","middleWare","ReduxThunk","enhancer","applyMiddleware","reducers","store","createStore","composeWithDevTools","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.d87f4a46.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"errorSlide_enter__8x4el\",\"enterActive\":\"errorSlide_enterActive__2iZZm\",\"exit\":\"errorSlide_exit__vLzW-\",\"exitActive\":\"errorSlide_exitActive__115-Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__2Qrqf\",\"enterActive\":\"pop_enterActive__3KXIo\",\"exit\":\"pop_exit__ZqYE0\",\"exitActive\":\"pop_exitActive__38YjQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__387VQ\",\"enterActive\":\"slide_enterActive__1Q7qu\",\"exit\":\"slide_exit__1bLfu\",\"exitActive\":\"slide_exitActive__3M4dL\"};","export const TYPE = {\n  getStart: 'phonebook/CONTACTS_GET_START',\n  getSuccess: 'phonebook/CONTACTS_GET_SUCCESS',\n  getFail: 'phonebook/CONTACTS_GET_FAIL',\n  updateStart: 'phonebook/CONTACTS_UPDATE_START',\n  updateSuccess: 'phonebook/CONTACTS_UPDATE_SUCCESS',\n  updateFail: 'phonebook/CONTACTS_UPDATE_FAIL',\n  filter: 'phonebook/FILTER_CONTACTS',\n  deleteStart: 'phonebook/DELETE_USER_START',\n  deleteSuccess: 'phonebook/DELETE_USER_SUCCESS',\n  deleteFail: 'phonebook/DELETE_USER_FAIL',\n};\n\n/* GET */\nexport function getCollectionStart() {\n  return {\n    type: TYPE.getStart,\n  };\n}\nexport function getCollectionSuccess(users) {\n  return {\n    type: TYPE.getSuccess,\n    // update arr of objs\n    payload: { users },\n  };\n}\nexport function getCollectionFail(error) {\n  return {\n    type: TYPE.getFail,\n    // update arr of objs\n    payload: { error },\n  };\n}\n\n/* PUT  */\n\nexport function updateCollectionStart() {\n  return {\n    type: TYPE.updateStart,\n  };\n}\nexport function updateCollectionSuccess(user) {\n  return {\n    type: TYPE.updateSuccess,\n    payload: { user },\n  };\n}\nexport function updateCollectionFail(error) {\n  return {\n    type: TYPE.updateFail,\n    payload: { error },\n  };\n}\n\n/* DELETE */\n\nexport function deleteUserStart() {\n  return {\n    type: TYPE.deleteStart,\n  };\n}\nexport function deleteUserSuccess(id) {\n  return {\n    type: TYPE.deleteSuccess,\n    // delete user from collection\n    payload: { id },\n  };\n}\nexport function deleteUserFail(error) {\n  return {\n    type: TYPE.deleteFail,\n    // delete user from collection\n    payload: { error },\n  };\n}\n\n/* FILTER  */\nexport function filterCollection(text) {\n  return {\n    type: TYPE.filter,\n    payload: { text },\n  };\n}\n","import axios from 'axios';\nimport * as actions from './phonebookActions';\n\naxios.defaults.baseURL = 'http://localhost:8086';\n\nexport const fetchData = () => async dispatch => {\n  dispatch(actions.getCollectionStart());\n\n  try {\n    const request = await axios.get('/contacts');\n    dispatch(actions.getCollectionSuccess(request.data));\n  } catch (err) {\n    dispatch(actions.getCollectionFail(err));\n  }\n};\n\nexport const putData = data => async dispatch => {\n  dispatch(actions.updateCollectionStart());\n\n  try {\n    const request = await axios.post('/contacts', data);\n    dispatch(actions.updateCollectionSuccess(request.data));\n  } catch (err) {\n    dispatch(actions.updateCollectionFail(err));\n  }\n};\n\nexport const deleteData = id => dispatch => {\n  dispatch(actions.deleteUserStart());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(actions.deleteUserSuccess(id)))\n    .catch(err => dispatch(actions.deleteUserFail(err)));\n};\n","import { createSelector } from 'reselect';\n\nexport const getContacts = state => state.phonebook.collection;\nexport const getFilterValue = state => state.phonebook.filter;\n\nexport const getFilteredContacts = createSelector(\n  [getContacts, getFilterValue],\n  (contacts, filterValue) =>\n    contacts.filter(({ name }) => name.includes(filterValue)),\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ label }) => (\n  <span style={{ color: '#ff0000', display: 'inline-block' }}>{label}</span>\n);\n\nNotification.defaultProps = {\n  label: '',\n};\n\nNotification.propTypes = {\n  label: PropTypes.string,\n};\nexport default Notification;\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\n\nconst error = css`\n  width: 300px;\n  position: absolute;\n  top: 10px;\n  right: 15px;\n  padding: 15px 20px;\n  background-color: red;\n  color: #fff;\n  border-radius: 5px;\n  font-weight: 700;\n`;\nconst p = css`\n  text-align: center;\n`;\n\nconst ErrorDuplicate = () => (\n  <div css={error}>\n    <p css={p}>Name is already in the list!</p>\n  </div>\n);\n\nexport default ErrorDuplicate;\n","import PropTypes from 'prop-types';\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\n\nconst label = css`\n  margin-bottom: 10px;\n  padding: 5px;\n`;\nconst input = css`\n  width: 100%;\n  padding: 10px 0 10px 5px;\n  border-radius: 5px;\n  border: 1px solid #dedede;\n  margin-top: 5px;\n  font-size: 16px;\n`;\n\nconst Input = ({ id, text, type, value, onChange, name }) => (\n  <label htmlFor={id} css={label}>\n    {text}\n    <input\n      type={type}\n      value={value}\n      name={name}\n      onChange={onChange}\n      id={id}\n      css={input}\n    />\n  </label>\n);\n\nInput.propTypes = {\n  id: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\nexport default Input;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nimport { validateAll } from 'indicative/validator';\nimport { CSSTransition } from 'react-transition-group';\nimport Notification from '../Notification/Notification';\nimport ErrorDuplicate from './ErrorDuplicate';\nimport SlideTransition from '../../transitions/errorSlide.module.css';\nimport Input from '../common/Input';\n\n// css emotion\nconst form = css`\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  box-shadow: 0px 3px 8px -2px rgba(0, 0, 0, 0.75);\n  border-radius: 5px;\n`;\nconst button = css`\n  width: 150px;\n  font-size: 16px;\n  cursor: pointer;\n  background-color: #fff;\n  border-radius: 5px;\n  padding: 3px;\n  width: 100%;\n  background-color: #3944a8;\n  color: #fff;\n  padding: 10px 0;\n  font-weight: 700;\n`;\n\n// indicative\nconst rules = {\n  name: 'required|string',\n  number: 'required|string',\n};\n\nconst messages = {\n  'name.required': 'Please enter a unique name for your account',\n  'number.required': 'Enter a phone number.',\n};\n\nexport default class ContactForm extends Component {\n  static propTypes = {\n    putContact: PropTypes.func.isRequired,\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number,\n        number: PropTypes.string,\n        name: PropTypes.strings,\n      }),\n    ).isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n    errors: null,\n    isDuplicate: false,\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    // recieve state name\n    const { name, number } = this.state;\n    // update parent state\n    const { putContact } = this.props;\n    // validate unique name\n    if (this.handleDupName(name)) {\n      // set animation\n      this.setState({ isDuplicate: true });\n      setTimeout(this.exitAnimation, 3000);\n      return;\n    }\n    const data = {\n      name,\n      number,\n    };\n    // validation\n    validateAll(data, rules, messages)\n      .then(d => {\n        // render if validated\n        putContact({\n          ...d,\n        });\n        // reset\n        this.reset();\n      })\n      .catch(err => {\n        // cat error and update state\n        const formattedErr = {};\n\n        err.forEach(error => {\n          formattedErr[error.field] = error.message;\n        });\n        this.setState({\n          errors: formattedErr,\n        });\n      });\n  };\n\n  exitAnimation = () => {\n    this.setState({ isDuplicate: false });\n  };\n\n  handleInput = e => {\n    const { value, name } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleDupName = name => {\n    const { contacts } = this.props;\n    const isUnique = contacts.some(contact => contact.name === name);\n    return isUnique;\n  };\n\n  reset() {\n    this.setState({\n      name: '',\n      number: '',\n      errors: null,\n      isDuplicate: false,\n    });\n  }\n\n  render() {\n    const { name, number, errors, isDuplicate } = this.state;\n    const idName = uuidv4();\n    const idPhone = uuidv4();\n\n    return (\n      <form onSubmit={this.handleSubmit} css={form}>\n        <Input\n          id={idName}\n          text=\"Name\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={this.handleInput}\n        />\n        {errors && <Notification label={errors.name} />}\n        <Input\n          id={idPhone}\n          text=\"Number\"\n          type=\"number\"\n          name=\"number\"\n          value={number}\n          onChange={this.handleInput}\n        />\n        {errors && <Notification label={errors.number} />}\n        <button type=\"submit\" css={button}>\n          Add contact\n        </button>\n        <CSSTransition\n          in={isDuplicate}\n          timeout={300}\n          classNames={SlideTransition}\n          unmountOnExit\n        >\n          <ErrorDuplicate />\n        </CSSTransition>\n      </form>\n    );\n  }\n}\n","import { connect } from 'react-redux';\nimport { putData } from '../../redux/phonebook/phonebookOperations';\nimport { getContacts } from '../../redux/phonebook/phoneSelectors';\nimport ContactForm from './ContactForm';\n\nconst mapStateToProps = state => {\n  return {\n    contacts: getContacts(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    putContact: contact => dispatch(putData(contact)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","/** @jsx jsx */\nimport { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx, css } from '@emotion/core';\n\nconst item = css`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 15px 8px;\n`;\n\nconst itemName = css`\n  flex-grow: 2;\n`;\nconst itemNumber = css`\n  flex-grow: 1;\n`;\n\nconst button = css`\n  padding: 4px;\n  max-width: 40px;\n  font-size: 16px;\n  cursor: pointer;\n  background-color: #fff;\n  border-radius: 5px;\n  flex-grow: 1;\n  background-color: #ff0000;\n  color: #fff;\n  font-weight: 700;\n`;\nconst list = css`\n  margin-top: 10px;\n  border: 1px solid #dedede;\n  border-radius: 5px;\n  box-shadow: 0px 3px 8px -2px rgba(0, 0, 0, 0.75);\n`;\n\nconst Contact = ({ contact, deleContact }) => {\n  const del = useCallback(() => deleContact(contact.id), [contact.id]);\n\n  return (\n    <li css={list}>\n      <div css={item}>\n        <p css={itemName}>{contact.name}</p>\n        <p css={itemNumber}>{contact.number}</p>\n        <button type=\"button\" onClick={del} css={button}>\n          ✕\n        </button>\n      </div>\n    </li>\n  );\n};\n\nContact.propTypes = {\n  deleContact: PropTypes.func.isRequired,\n  contact: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default Contact;\n","import { connect } from 'react-redux';\nimport { deleteData } from '../../redux/phonebook/phonebookOperations';\nimport Contact from './Contact';\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleContact: id => dispatch(deleteData(id)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Contact);\n","/** @jsx jsx */\nimport { useEffect } from 'react';\nimport { jsx, css } from '@emotion/core';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport Contact from '../Contact/ContactContainer';\nimport slideTransition from '../../transitions/slide.module.css';\n\nconst lists = css`\n  list-style-type: none;\n  padding: 0;\n`;\nconst ContactList = ({ contacts, fetchContacts }) => {\n  useEffect(() => {\n    fetchContacts();\n  }, []);\n\n  return (\n    <TransitionGroup component=\"ul\" css={lists}>\n      {contacts.map(contact => (\n        <CSSTransition\n          key={contact.id}\n          timeout={500}\n          classNames={slideTransition}\n        >\n          <Contact contact={contact} />\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n};\n\nContactList.propTypes = {\n  fetchContacts: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default ContactList;\n","import { connect } from 'react-redux';\nimport {\n  fetchData,\n  deleteData,\n} from '../../redux/phonebook/phonebookOperations';\nimport { getFilteredContacts } from '../../redux/phonebook/phoneSelectors';\nimport ContactList from './ContactList';\n\nconst mapStateToProps = state => {\n  return {\n    contacts: getFilteredContacts(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchContacts: () => dispatch(fetchData()),\n    deleContact: id => dispatch(deleteData(id)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport Input from '../common/Input';\nimport PopTransition from '../../transitions/pop.module.css';\n\nconst Filter = ({ inputFilter, filter, contacts }) => {\n  function getValue({ target }) {\n    inputFilter(target.value);\n  }\n\n  return (\n    <div>\n      <TransitionGroup>\n        {contacts && contacts.length > 1 && (\n          <CSSTransition timeout={300} classNames={PopTransition}>\n            <div>\n              <Input\n                type=\"text\"\n                onChange={getValue}\n                value={filter}\n                id=\"filter\"\n                name=\"filter\"\n                text=\"Find contacts by name\"\n              />\n            </div>\n          </CSSTransition>\n        )}\n      </TransitionGroup>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  inputFilter: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\nexport default Filter;\n","import { connect } from 'react-redux';\nimport * as ACTIONS from '../../redux/phonebook/phonebookActions';\nimport {\n  getFilterValue,\n  getContacts,\n} from '../../redux/phonebook/phoneSelectors';\nimport Filter from './Filter';\n\nconst mapStateToProps = state => {\n  return {\n    contacts: getContacts(state),\n    filter: getFilterValue(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    inputFilter: input => dispatch(ACTIONS.filterCollection(input)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { useEffect, useState } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport ContactForm from './ContactForm/ContactFormContainer';\nimport ContactList from './ContactList/ContactListContainer';\nimport Filter from './Filter/FilterContainer';\nimport slideTransition from '../transitions/slide.module.css';\n\nconst App = () => {\n  const [isShown, setShown] = useState(false);\n\n  useEffect(() => {\n    setShown(!isShown);\n  }, []);\n\n  return (\n    <>\n      <CSSTransition in={isShown} timeout={500} classNames={slideTransition}>\n        <h1>Phonebook</h1>\n      </CSSTransition>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport {\n  collectionReducer,\n  filterReducer,\n  errorReducer,\n} from './phonebook/phonebookReducers';\n\n// create store states inside phonebook store\nconst collectionReducers = combineReducers({\n  collection: collectionReducer,\n  filter: filterReducer,\n  error: errorReducer,\n});\n\n// root reducer\nconst rootReducer = combineReducers({\n  phonebook: collectionReducers,\n});\n\nexport default rootReducer;\n","import { TYPE } from './phonebookActions';\n\nexport function collectionReducer(state = [], action) {\n  switch (action.type) {\n    case TYPE.getSuccess: {\n      return [...action.payload.users];\n    }\n\n    case TYPE.updateSuccess: {\n      return [...state, action.payload.user];\n    }\n\n    case TYPE.deleteSuccess: {\n      return [...state.filter(contact => contact.id !== action.payload.id)];\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport function filterReducer(state = '', action) {\n  switch (action.type) {\n    case TYPE.filter: {\n      // return new object with updated collection\n      return action.payload.text;\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport function errorReducer(state = null, action) {\n  switch (action.type) {\n    case TYPE.getFail:\n    case TYPE.updateFail:\n    case TYPE.deleteFail: {\n      return action.payload.error;\n    }\n\n    default:\n      return state;\n  }\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport ReduxThunk from 'redux-thunk';\nimport rootReducer from './combineReducers';\n\n// middleWare\nconst middleWare = [ReduxThunk];\nconst enhancer = applyMiddleware(...middleWare);\n\n// create base store\nfunction configureStore(reducers) {\n  // add extention as 3rd parameter\n  return createStore(reducers, composeWithDevTools(enhancer));\n}\n\nconst store = configureStore(rootReducer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport './styles/styles.css';\nimport store from './redux/configureStore';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}