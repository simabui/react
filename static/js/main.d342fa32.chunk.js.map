{"version":3,"sources":["components/Notification/Notification.js","components/ContactForm/Input.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App.js","index.js"],"names":["Notification","_ref","label","react_default","a","createElement","style","color","display","defaultProps","css","_templateObject","input","_templateObject2","Input","id","text","type","value","onChange","name","Object","core_browser_esm","htmlFor","form","ContactForm_templateObject","button","ContactForm_templateObject2","rules","number","messages","name.required","number.required","ContactForm","state","errors","handleSubmit","e","preventDefault","_this$state","_this","_this$props","props","handleContacts","onUnique","alert","concat","uuidv4","data","validateAll","then","d","objectSpread","reset","catch","err","formattedErr","forEach","error","field","message","setState","handleInput","_e$target","target","defineProperty","this","_this$state2","idName","idPhone","onSubmit","ContactForm_Input","components_Notification_Notification","Component","item","ContactList_templateObject","ContactList_templateObject2","list","_templateObject3","ContactList","onDeleteContact","map","contact","key","onClick","Filter_templateObject","Filter","getFIlterValue","App","contacts","filter","handleFilter","collection","filterValue","_ref2","toLowerCase","includes","obj","toConsumableArray","deleteContact","handleUniqueName","some","localStorage","getItem","JSON","parse","prevProp","prevState","strContacts","stringify","setItem","filteredPhoneBook","react","ContactForm_ContactForm","length","components_Filter_Filter","components_ContactList_ContactList","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.d342fa32.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ label }) => (\n  <span style={{ color: '#ff0000', display: 'inline-block' }}>{label}</span>\n);\n\nNotification.defaultProps = {\n  label: '',\n};\n\nNotification.propTypes = {\n  label: PropTypes.string,\n};\nexport default Notification;\n","import PropTypes from 'prop-types';\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\n\nconst label = css`\n  margin-bottom: 10px;\n`;\nconst input = css`\n  margin-left: 5px;\n`;\n\nconst Input = ({ id, text, type, value, onChange, name }) => (\n  <label htmlFor={id} css={label}>\n    {text}\n    <input\n      type={type}\n      value={value}\n      name={name}\n      onChange={onChange}\n      id={id}\n      css={input}\n    />\n  </label>\n);\n\nInput.propTypes = {\n  id: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\nexport default Input;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nimport { validateAll } from 'indicative/validator';\nimport Notification from '../Notification/Notification';\nimport Input from './Input';\n\n// css emotion\nconst form = css`\n  display: flex;\n  flex-direction: column;\n`;\nconst button = css`\n  width: 150px;\n  font-size: 16px;\n  cursor: pointer;\n  background-color: #fff;\n  border-radius: 5px;\n  padding: 3px;\n`;\n\n// indicative\nconst rules = {\n  name: 'required|string',\n  number: 'required|string',\n};\n\nconst messages = {\n  'name.required': 'Please enter a unique name for your account',\n  'number.required': 'Enter a phone number.',\n};\n\nexport default class ContactForm extends Component {\n  static propTypes = {\n    handleContacts: PropTypes.func.isRequired,\n    onUnique: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n    errors: null,\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    // recieve state name\n    const { name, number } = this.state;\n    // update parent state\n    const { handleContacts, onUnique } = this.props;\n    // validate unique name\n    if (onUnique(name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    // generate id\n    const id = uuidv4();\n    const data = {\n      name,\n      number,\n    };\n    // validation\n    validateAll(data, rules, messages)\n      .then(d => {\n        // render if validated\n        handleContacts({\n          ...d,\n          id,\n        });\n        // reset\n        this.reset();\n      })\n      .catch(err => {\n        // cat error and update state\n        const formattedErr = {};\n\n        err.forEach(error => {\n          formattedErr[error.field] = error.message;\n        });\n        this.setState({\n          errors: formattedErr,\n        });\n      });\n  };\n\n  handleInput = e => {\n    const { value, name } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  reset() {\n    this.setState({\n      name: '',\n      number: '',\n      errors: null,\n    });\n  }\n\n  render() {\n    const { name, number, errors } = this.state;\n    const idName = uuidv4();\n    const idPhone = uuidv4();\n    return (\n      <form onSubmit={this.handleSubmit} css={form}>\n        <Input\n          id={idName}\n          text=\"Name\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={this.handleInput}\n        />\n        {errors && <Notification label={errors.name} />}\n        <Input\n          id={idPhone}\n          text=\"Number\"\n          type=\"number\"\n          name=\"number\"\n          value={number}\n          onChange={this.handleInput}\n        />\n        {errors && <Notification label={errors.number} />}\n        <button type=\"submit\" css={button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nimport PropTypes from 'prop-types';\n\nconst item = css`\n  display: flex;\n  align-items: center;\n`;\n\nconst button = css`\n  margin-left: 15px;\n  padding: 4px 10px;\n  font-size: 16px;\n  cursor: pointer;\n  background-color: #fff;\n  border-radius: 5px;\n`;\nconst list = css`\n  margin-top: 10px;\n`;\n\nconst ContactList = ({ data, onDeleteContact }) => (\n  <ul>\n    {data.map(contact => (\n      <li key={contact.id} css={list}>\n        <div css={item}>\n          {contact.name}: {contact.number}\n          <button\n            type=\"button\"\n            onClick={() => onDeleteContact(contact.id)}\n            css={button}\n          >\n            delete contact\n          </button>\n        </div>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.defaultProps = {\n  data: null,\n};\n\nContactList.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default ContactList;\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nimport PropTypes from 'prop-types';\n\nconst input = css`\n  width: 200px;\n  padding: 3px;\n`;\nconst Filter = ({ getFIlterValue }) => (\n  <div>\n    <p>Find contacts by name</p>\n    <input type=\"text\" onChange={getFIlterValue} css={input} />\n  </div>\n);\n\nexport default Filter;\n\nFilter.propTypes = {\n  getFIlterValue: PropTypes.func.isRequired,\n};\n","import React, { Component, Fragment } from 'react';\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\n\nclass App extends Component {\n  static propTypes = {};\n\n  static defaultProps = {};\n\n  state = {\n    contacts: [],\n    filter: '',\n  };\n  // render\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    if (contacts) {\n      this.setState({\n        contacts: [...JSON.parse(contacts)],\n      });\n    }\n  }\n  // update\n\n  componentDidUpdate(prevProp, prevState) {\n    if (prevState !== this.state) {\n      const { contacts } = this.state;\n      const strContacts = JSON.stringify(contacts);\n      localStorage.setItem('contacts', strContacts);\n    }\n  }\n\n  getFIlterValue = ({ target }) => {\n    const { value } = target;\n\n    this.setState({\n      filter: value,\n    });\n  };\n\n  // filter by search\n\n  handleFilter = (collection, filterValue) => {\n    return collection.filter(({ name }) =>\n      name.toLowerCase().includes(filterValue.toLowerCase()),\n    );\n  };\n\n  handleContacts = obj => {\n    this.setState(state => {\n      return {\n        // update contact list\n        contacts: [...state.contacts, obj],\n      };\n    });\n  };\n\n  deleteContact = id => {\n    this.setState(state => {\n      return {\n        contacts: state.contacts.filter(contact => contact.id !== id),\n      };\n    });\n  };\n\n  // check if unique name in collection\n\n  handleUniqueName = name => {\n    const { contacts } = this.state;\n    const isUnique = contacts.some(contact => contact.name === name);\n    return isUnique;\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const filteredPhoneBook = this.handleFilter(contacts, filter);\n\n    return (\n      <Fragment>\n        <h1>Phonebook</h1>\n        <ContactForm\n          handleContacts={this.handleContacts}\n          onUnique={this.handleUniqueName}\n        />\n        <h2>Contacts</h2>\n        {contacts.length > 0 && <Filter getFIlterValue={this.getFIlterValue} />}\n        <ContactList\n          data={filteredPhoneBook}\n          onDeleteContact={this.deleteContact}\n        />\n      </Fragment>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './styles/styles.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}