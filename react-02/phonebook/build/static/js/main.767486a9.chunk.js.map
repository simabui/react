{"version":3,"sources":["components/Notification.js","components/ContactForm.js","components/ContactList.js","components/Filter.js","components/App.js","index.js"],"names":["Notification","_ref","label","react_default","a","createElement","style","color","display","defaultProps","form","css","_templateObject","button","_templateObject2","_templateObject3","input","_templateObject4","inputNUmber","_templateObject5","rules","name","number","messages","name.required","number.required","ContactForm","state","errors","handleSubmit","e","preventDefault","_this$state","_this","_this$props","props","handleContacts","onUnique","alert","concat","id","uuidv4","data","validateAll","then","d","Object","objectSpread","reset","catch","err","formattedErr","forEach","error","field","message","setState","handleInput","_e$target","target","value","defineProperty","this","_this$state2","idName","idPhone","core_browser_esm","onSubmit","htmlFor","type","onChange","components_Notification","min","Component","item","ContactList_templateObject","ContactList_templateObject2","ContactList","onDeleteContact","map","contact","key","onClick","Filter_templateObject","Filter","getFIlterValue","App","contacts","filter","handleFilter","collection","filterValue","_ref2","toLowerCase","includes","obj","toConsumableArray","deleteContact","handleUniqueName","some","filteredPhoneBook","react","ContactForm_ContactForm","length","components_Filter","components_ContactList","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.767486a9.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ label }) => (\n  <span style={{ color: '#ff0000', display: 'inline-block' }}>{label}</span>\n);\n\nNotification.defaultProps = {\n  label: '',\n};\n\nNotification.propTypes = {\n  label: PropTypes.string,\n};\nexport default Notification;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nimport { validateAll } from 'indicative/validator';\nimport Notification from './Notification';\n\n// css emotion\nconst form = css`\n  display: flex;\n  flex-direction: column;\n`;\nconst button = css`\n  width: 150px;\n  font-size: 16px;\n  cursor: pointer;\n  background-color: #fff;\n  border-radius: 5px;\n  padding: 3px;\n`;\nconst label = css`\n  margin-bottom: 10px;\n`;\nconst input = css`\n  margin-left: 5px;\n`;\nconst inputNUmber = css`\n  &::-webkit-inner-spin-button,\n  ::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n  ${input}\n`;\n// indicative\nconst rules = {\n  name: 'required|string',\n  number: 'required|string',\n};\n\nconst messages = {\n  'name.required': 'Please enter a unique name for your account',\n  'number.required': 'Enter a phone number.',\n};\n\nexport default class ContactForm extends Component {\n  static propTypes = {\n    handleContacts: PropTypes.func.isRequired,\n    onUnique: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n    errors: null,\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    // recieve state name\n    const { name, number } = this.state;\n    // update parent state\n    const { handleContacts, onUnique } = this.props;\n    // validate unique name\n    if (onUnique(name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    // generate id\n    const id = uuidv4();\n    const data = {\n      name,\n      number,\n    };\n    // validation\n    validateAll(data, rules, messages)\n      .then(d => {\n        // render if validated\n        handleContacts({\n          ...d,\n          id,\n        });\n        // reset\n        this.reset();\n      })\n      .catch(err => {\n        // cat error and update state\n        const formattedErr = {};\n\n        err.forEach(error => {\n          formattedErr[error.field] = error.message;\n        });\n        this.setState({\n          errors: formattedErr,\n        });\n      });\n  };\n\n  handleInput = e => {\n    const { value, name } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  reset() {\n    this.setState({\n      name: '',\n      number: '',\n      errors: null,\n    });\n  }\n\n  render() {\n    const { name, number, errors } = this.state;\n    const idName = uuidv4();\n    const idPhone = uuidv4();\n    return (\n      <form onSubmit={this.handleSubmit} css={form}>\n        <label htmlFor={idName} css={label}>\n          Name\n          <input\n            type=\"text\"\n            value={name}\n            name=\"name\"\n            onChange={this.handleInput}\n            id={idName}\n            css={input}\n          />\n        </label>\n        {errors && <Notification label={errors.name} />}\n        <label htmlFor={idPhone} css={label}>\n          Number\n          <input\n            type=\"number\"\n            value={number}\n            name=\"number\"\n            onChange={this.handleInput}\n            id={idPhone}\n            css={inputNUmber}\n            min=\"0\"\n          />\n        </label>\n        {errors && <Notification label={errors.number} />}\n        <button type=\"submit\" css={button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nimport PropTypes from 'prop-types';\n\nconst item = css`\n  display: flex;\n  align-items: center;\n`;\n\nconst button = css`\n  margin-left: 15px;\n  padding: 4px 10px;\n  font-size: 16px;\n  cursor: pointer;\n  background-color: #fff;\n  border-radius: 5px;\n`;\n\nconst ContactList = ({ data, onDeleteContact }) => (\n  <ul>\n    {data.map(contact => (\n      <li key={contact.id}>\n        <div css={item}>\n          {contact.name}: {contact.number}\n          <button\n            type=\"button\"\n            onClick={() => onDeleteContact(contact.id)}\n            css={button}\n          >\n            delete contact\n          </button>\n        </div>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.defaultProps = {\n  data: null,\n};\n\nContactList.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default ContactList;\n","/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nimport PropTypes from 'prop-types';\n\nconst input = css`\n  width: 200px;\n  padding: 3px;\n`;\nconst Filter = ({ getFIlterValue }) => (\n  <div>\n    <p>Find contacts by name</p>\n    <input type=\"text\" onChange={getFIlterValue} css={input} />\n  </div>\n);\n\nexport default Filter;\n\nFilter.propTypes = {\n  getFIlterValue: PropTypes.func.isRequired,\n};\n","import React, { Component, Fragment } from 'react';\nimport ContactForm from './ContactForm';\nimport ContactList from './ContactList';\nimport Filter from './Filter';\n\nclass App extends Component {\n  static propTypes = {};\n\n  static defaultProps = {};\n\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  getFIlterValue = ({ target }) => {\n    const { value } = target;\n\n    this.setState({\n      filter: value,\n    });\n  };\n\n  // filter by search\n\n  handleFilter = (collection, filterValue) => {\n    return collection.filter(({ name }) =>\n      name.toLowerCase().includes(filterValue.toLowerCase()),\n    );\n  };\n\n  handleContacts = obj => {\n    this.setState(state => {\n      return {\n        // update contact list\n        contacts: [...state.contacts, obj],\n      };\n    });\n  };\n\n  deleteContact = id => {\n    this.setState(state => {\n      return {\n        contacts: state.contacts.filter(contact => contact.id !== id),\n      };\n    });\n  };\n\n  // check if unique name in collection\n\n  handleUniqueName = name => {\n    const { contacts } = this.state;\n    const isUnique = contacts.some(contact => contact.name === name);\n    return isUnique;\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const filteredPhoneBook = this.handleFilter(contacts, filter);\n\n    return (\n      <Fragment>\n        <h1>Phonebook</h1>\n        <ContactForm\n          handleContacts={this.handleContacts}\n          onUnique={this.handleUniqueName}\n        />\n        <h2>Contacts</h2>\n        {contacts.length > 0 && <Filter getFIlterValue={this.getFIlterValue} />}\n        <ContactList\n          data={filteredPhoneBook}\n          onDeleteContact={this.deleteContact}\n        />\n      </Fragment>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './styles/styles.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}